{
    "contents" : "#' A multGGplot Function\n#'\n#' Similar a par(mfrow=c(row,col)) para \"ggplot\" (Obtenida de cookbook for R )\n#' @param plotslist plots separados por coma\n#' @param cols Number of columns in layout\n#' @param layout A matrix specifying the layout. If present, 'cols' is ignored.\n#' @keywords multiGGplot\n#' @export multGGplot\n#' @import grid\n#' @examples\n#' installifnot(\"ggplot2\")\n#' p1 <- qplot(gear, mpg, data=mtcars, geom=c(\"boxplot\", \"jitter\"),fill=gear)\n#' p2 <- p3 <- p4 <- p1\n#' multGGplot(p1,p2,p3,p4, cols=2)\n\n\nmultGGplot <- function(..., plotlist = NULL, file, cols = 1, layout = NULL) {\n  plots <- c(list(...), plotlist)\n  numPlots = length(plots)\n\n  if (is.null(layout)) {\n    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),\n                     ncol = cols, nrow = ceiling(numPlots/cols))\n  }\n  if (numPlots == 1) {\n    print(plots[[1]])\n  } else {\n    grid.newpage()\n    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))\n    for (i in 1:numPlots) {\n\n      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))\n      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,\n                                      layout.pos.col = matchidx$col))\n    }\n  }\n}\n\n# #' @import grid\n",
    "created" : 1456829077688.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4071639998",
    "id" : "E1D0001E",
    "lastKnownWriteTime" : 1456829141,
    "path" : "~/mmotaF/R/multGGplot.R",
    "project_path" : "R/multGGplot.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}